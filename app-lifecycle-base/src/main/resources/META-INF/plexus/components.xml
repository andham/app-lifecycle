<component-set>
  <components>
    <component>
      <role>org.apache.maven.lifecycle.mapping.LifecycleMapping</role>
      <role-hint>abstract-plugin</role-hint>
      <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping</implementation>
      <description>
        Abstract lifecycle mapping for an application plugin build. These plugins all build in basically
        the same way, are assembled the same way for installation in the applicatin, and share a
        common plugin descriptor format. Therefore, the only thing we need to do for new applications
        supporting this sort of plugin system is alias this abstract mapping using 
        org.sonatype.maven.plugin.app.DelegatingLifecyleMapping.
      </description>
      <configuration>
        <lifecycles>
          <lifecycle>
            <id>default</id>
            <phases>
              <!-- Sonatype app-specific steps: 
               |
               |     1. inject the app-plugin ArtifactHandler into the project's artifact instance
               |     2. verify that all app dependencies in this project have their scope set to 'provided'
               -->
              <initialize>
                org.sonatype.plugins:app-lifecycle-maven-plugin:${project.version}:inject-artifact-handler,
                org.sonatype.plugins:app-lifecycle-maven-plugin:${project.version}:check-dependencies
              </initialize>
              
              <process-resources>org.apache.maven.plugins:maven-resources-plugin:resources</process-resources>
              <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile>
              
              <!-- Sonatype app-specific step: generate the plugin descriptor. -->
              <process-classes>org.sonatype.plugins:app-lifecycle-maven-plugin:${project.version}:generate-metadata</process-classes>
              
              <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources>
              <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile>
              <test>org.apache.maven.plugins:maven-surefire-plugin:test</test>

              <!-- Sonatype app-specific step inside: create a bundle for dropping into an existing application instance -->
              <package>
                org.apache.maven.plugins:maven-jar-plugin:jar,
                org.sonatype.plugins:app-lifecycle-maven-plugin:${project.version}:create-bundle
              </package>
              
              <install>org.apache.maven.plugins:maven-install-plugin:install</install>
              <deploy>org.apache.maven.plugins:maven-deploy-plugin:deploy</deploy>
            </phases>
          </lifecycle>
        </lifecycles>
      </configuration>
    </component>
  </components>
</component-set>